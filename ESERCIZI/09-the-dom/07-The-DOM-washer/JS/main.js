/**
 * @file        main.js
 * @author      Gabriele Speciale
 * @date        2024-06-12
 * @description 
 * 
 * create a simulation of a dishwasher system using two stacks of dishes
 * 
    ● one stack represents dirty dishes, and the other represents clean dishes

    ● the dirty stack has a random number of plates 10 - 15
    
    ● useful functions
     ○ washDish - moves a dish from the dirty stack to the clean stack
     ○ drawStacks - displays the current state of both stacks in the page updating the DOM
     ○ runSimulation - simulate washing all dirty dishes adding a random delay between steps

    ● use correct HTML and CSS as needed for this exercise
 */




/**
 * function createDirtyStack
 * generates a stack of dirty dishes with a random number of plates.
 * 
 * @returns {object} - array containing dirty dishes (each numbered)
 */
function createDirtyStack() {

   // assign to a variable the <ul> that contains the stack of dirty plates
   let stackDirtyPlates = document.getElementById("firstStackDirty");

   // generate a random number to determine how many plates to add to the stack of dirty plates
   let randomPlates = Math.round(Math.random() * (max_piatti - min_piatti) + min_piatti);

   // Fill the stack with dirty plates
   for (let i = 0; i < randomPlates; i++) {

      // assign to a variable the creation of an <li> to insert into the <ul> of the dirty plate stack
      let dirtyPlate = document.createElement("li");
      let imagePlate = document.createElement("img");
      imagePlate.src = "IMG/dirty-plate.svg";
      dirtyPlate.append(imagePlate);
      stackDirtyPlates.append(dirtyPlate);
   }

   return stackDirtyPlates;
}



/**
* function washDish
* 
* if there are still dishes in the dirty stack, then:
* REMOVE the last element of the array through .pop() (i.e., the dish at the top of the stack),
* and INSERT the previously removed dish into the array of the stack containing the clean dishes through .push()
* @param {object} stackCleanPlates - array containing the clean dishes
* @param {object} stackDirtyPlates - array containing the dirty dishes
*/
function washDish(stackDirtyPlates, arrayStackPlateDirty, stackCleanPlates) {

   // assign to a variable the last plate (on top) of the dirty plate stack
   const dirtyPlate = arrayStackPlateDirty.pop();

   // remove it from the DOM, the last plate in the <ul>
   stackDirtyPlates.removeChild(dirtyPlate);

   // assign to a variable the creation of an <li> to insert into the <ul> of the clean plate stack
   const cleanPlate = document.createElement("li");
   // add the src attribute + image pattern, and attach it to the <li>
   const imagePlate = document.createElement("img");
   imagePlate.src = "IMG/clean-plate.svg";
   cleanPlate.appendChild(imagePlate);

   // add the cleanPlate (<li> <img> </li>), and attach it to the clean plate stack
   stackCleanPlates.appendChild(cleanPlate);

}


/**
* function runSimulation
* 
* every 2 seconds with setInterval():
*  1. it updates the remaining dirty dishes and the already clean dishes.
*  2. then, through the washDish() function, it takes the last dish
*     from the dirty plate stack and inserts it into the clean plate stack in increasing order
* 
* if the length of the array (dirtyPlates.length) is === 0:
*  1. it prints the situation for the last time:
*     all dishes are clean, and there are no dirty dishes left
*  2. it stops the interval through clearInterval()
* 
* for all functions, we pass as arguments the stack of dirty plates and the stack of clean plates
*/
function runSimulation() {

   // stack containing dirty dishes randomly generated by the createDirtyStack() function
   const stackDirtyPlates = createDirtyStack();
   console.log(stackDirtyPlates);

   // create a NodeList taken from the document
   let NodeStackPlateDirty = document.querySelectorAll("#firstStackDirty li");
   // convert it into an array to use methods
   let arrayStackPlateDirty = Array.from(NodeStackPlateDirty);
   console.log(arrayStackPlateDirty);

   // stack containing clean dishes
   const stackCleanPlates = document.getElementById("cleanStack");
   console.log(stackCleanPlates);

   let timerId = setInterval(() => {

      // check if all dirty stacks are empty
      if (arrayStackPlateDirty.length === 0) {
         clearInterval(timerId);
         alert("You cleaned all the plates!");

      } else {
         washDish(stackDirtyPlates, arrayStackPlateDirty, stackCleanPlates);
      }

   }, 2000);

}


const min_piatti = 10;  // minimum number of dirty plates in a stack
const max_piatti = 15;  // maximum number of dirty plates in a stack

// start washing dishes!
runSimulation();